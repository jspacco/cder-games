plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'cder-games'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.register('distZip', Zip) {
    group = 'distribution'
    description = 'Create a zip file for distribution.'

    dependsOn tasks.named('bootJar') // or 'jar'

    archiveFileName = 'cder-games.zip'
    destinationDirectory = layout.buildDirectory.dir('dist')

    // Include the generated jar
    from(tasks.named('bootJar')) {
        into('cder-games')
    }

	// Generate accounts.properties
    into('cder-games/config') {
        from {
            resources.text.fromString('test:test123\n')
        } {
            rename { 'accounts.txt' }
        }
    }

    // Include application.yml from resources
    from('src/main/resources/application.yaml') {
    	into('cder-games/config')
	}

	// .version file
	into('cder-games') {
        from {
            def gitHash = 'unknown'
            try {
                gitHash = 'git rev-parse --short HEAD'.execute().text.trim()
            } catch (Exception ignored) {}
            def versionContent = """\
                version: ${project.version}
                git-hash: ${gitHash}
                timestamp: ${new Date().format("yyyy-MM-dd'T'HH:mm:ssXXX")}
            """.stripIndent()
            resources.text.fromString(versionContent)
        } {
            rename { '.version' }
        }
    }

}
